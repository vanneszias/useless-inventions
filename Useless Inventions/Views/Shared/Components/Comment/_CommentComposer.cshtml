@model int // InventionId
@if (User.Identity?.IsAuthenticated == true)
{
    <form id="commentComposerForm-@Model" class="mb-4" method="post">
        @Html.AntiForgeryToken()
        <input type="hidden" name="inventionId" value="@Model" />
        <div class="mb-3">
            <textarea name="content" class="form-control" rows="3" required placeholder="Share your thoughts..."></textarea>
        </div>
        <button type="submit" class="btn btn-primary">
            <span class="default-text">Post Comment</span>
            <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
        </button>
    </form>
    <div id="toast-container" class="position-fixed bottom-0 end-0 p-3" style="z-index: 1100;"></div>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('commentComposerForm-@Model');
            if (!form) return;
            form.addEventListener('submit', async function(e) {
                e.preventDefault();
                const btn = form.querySelector('button[type="submit"]');
                btn.disabled = true;
                btn.querySelector('.default-text').classList.add('d-none');
                btn.querySelector('.spinner-border').classList.remove('d-none');
                const formData = new FormData(form);
                const token = form.querySelector('input[name="__RequestVerificationToken"]').value;
                try {
                    const response = await fetch('/Inventions/AddComment', {
                        method: 'POST',
                        headers: { 'RequestVerificationToken': token },
                        body: formData
                    });
                    if (response.redirected) {
                        window.location.href = response.url;
                        return;
                    }
                    // Reload only the comment list
                    const commentsSection = document.getElementById('comments-section-@Model');
                    if (commentsSection) {
                        const res = await fetch(window.location.pathname + '?handler=Comments&inventionId=@Model');
                        commentsSection.innerHTML = await res.text();
                    } else {
                        window.location.reload();
                    }
                    showToast('Comment posted!', 'success');
                    form.reset();
                } catch (err) {
                    showToast('Failed to post comment.', 'danger');
                } finally {
                    btn.disabled = false;
                    btn.querySelector('.default-text').classList.remove('d-none');
                    btn.querySelector('.spinner-border').classList.add('d-none');
                }
            });

            function showToast(message, type) {
                const container = document.getElementById('toast-container');
                const toast = document.createElement('div');
                toast.className = `toast align-items-center text-bg-${type} border-0 show mb-2`;
                toast.setAttribute('role', 'alert');
                toast.setAttribute('aria-live', 'assertive');
                toast.setAttribute('aria-atomic', 'true');
                toast.innerHTML = `<div class='d-flex'><div class='toast-body'>${message}</div><button type='button' class='btn-close btn-close-white me-2 m-auto' data-bs-dismiss='toast' aria-label='Close'></button></div>`;
                container.appendChild(toast);
                setTimeout(() => toast.remove(), 3000);
            }
        });
    </script>
} 