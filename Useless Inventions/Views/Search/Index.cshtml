@model Useless_Inventions.Controllers.SearchResultsViewModel

@{
    ViewData["Title"] = "Search";
    var query = ViewBag.Query as string ?? "";
    var showSuggestions = ViewBag.ShowSuggestions ?? false;
}

<div class="search-container">
    <!-- Search Header -->
    <div class="search-header">
        <div class="search-box-container">
            <form asp-action="QuickSearch" method="post" class="search-form">
                <div class="search-input-group">
                    <i class="bi bi-search search-icon"></i>
                    <input type="text" name="query" value="@query" 
                           class="search-input" 
                           placeholder="Search inventions, people, or hashtags..." 
                           autocomplete="off"
                           id="searchInput">
                    <button type="submit" class="search-btn">
                        <i class="bi bi-arrow-right"></i>
                    </button>
                </div>
            </form>
            <div id="searchSuggestions" class="search-suggestions"></div>
        </div>
    </div>

    @if (showSuggestions)
    {
        <!-- Search Suggestions -->
        <div class="search-content">
            <div class="suggestions-section">
                <h3 class="section-title">
                    <i class="bi bi-lightbulb me-2"></i>
                    Discover Something New
                </h3>
                
                <div class="suggestion-categories">
                    <div class="row g-3">
                        <div class="col-12 col-md-6">
                            <div class="suggestion-card">
                                <div class="suggestion-icon">
                                    <i class="bi bi-fire text-danger"></i>
                                </div>
                                <h5>Trending Now</h5>
                                <p>See what inventions are popular this week</p>
                                <a href="/Explore/Trends" class="btn btn-outline-primary btn-sm">
                                    View Trends
                                </a>
                            </div>
                        </div>
                        
                        <div class="col-12 col-md-6">
                            <div class="suggestion-card">
                                <div class="suggestion-icon">
                                    <i class="bi bi-people text-primary"></i>
                                </div>
                                <h5>Find People</h5>
                                <p>Connect with creative inventors and makers</p>
                                <a href="/Explore/People" class="btn btn-outline-primary btn-sm">
                                    Discover People
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="popular-searches">
                    <h4 class="subsection-title">Popular Searches</h4>
                    <div class="search-tags">
                        <a href="/Search/Results?query=funny" class="search-tag">funny</a>
                        <a href="/Search/Results?query=useful" class="search-tag">useful</a>
                        <a href="/Search/Results?query=weird" class="search-tag">weird</a>
                        <a href="/Search/Results?query=creative" class="search-tag">creative</a>
                        <a href="/Search/Results?query=invention" class="search-tag">invention</a>
                        <a href="/Search/Results?query=gadget" class="search-tag">gadget</a>
                        <a href="/Search/Results?query=diy" class="search-tag">diy</a>
                        <a href="/Search/Results?query=innovation" class="search-tag">innovation</a>
                    </div>
                </div>
                
                <div class="search-tips">
                    <h4 class="subsection-title">
                        <i class="bi bi-info-circle me-2"></i>
                        Search Tips
                    </h4>
                    <ul class="tips-list">
                        <li>Use quotes for exact phrases: <code>"useless invention"</code></li>
                        <li>Search by username: <code>@@username</code></li>
                        <li>Find hashtags: <code>#funny #creative</code></li>
                        <li>Combine terms: <code>kitchen gadget funny</code></li>
                    </ul>
                </div>
            </div>
        </div>
    }
    else if (!string.IsNullOrEmpty(query))
    {
        <!-- Search Results Preview (if coming from navigation) -->
        <div class="search-content">
            <div class="search-preview">
                <div class="d-flex align-items-center justify-content-between mb-3">
                    <h3>Search Results for "@query"</h3>
                    <a href="/Search/Results?query=@Uri.EscapeDataString(query)" class="btn btn-primary">
                        View All Results
                    </a>
                </div>
                <p class="text-muted">Click "View All Results" to see complete search results.</p>
            </div>
        </div>
    }
    
    <!-- Recent Searches (if user is logged in) -->
    @if (User.Identity?.IsAuthenticated == true)
    {
        <div class="recent-searches">
            <h4 class="subsection-title">
                <i class="bi bi-clock-history me-2"></i>
                Recent Searches
            </h4>
            <div id="recentSearches" class="search-tags">
                <!-- Recent searches would be loaded here via JavaScript -->
                <span class="text-muted">No recent searches</span>
            </div>
        </div>
    }
</div>

<style>
    .search-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 2rem 1rem;
    }

    .search-header {
        margin-bottom: 3rem;
    }

    .search-box-container {
        position: relative;
        max-width: 600px;
        margin: 0 auto;
    }

    .search-form {
        margin-bottom: 0;
    }

    .search-input-group {
        position: relative;
        display: flex;
        align-items: center;
        background: var(--surface);
        border: 2px solid var(--border);
        border-radius: 50px;
        padding: 0.75rem 1.5rem;
        transition: all 0.3s ease;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

    .search-input-group:focus-within {
        border-color: var(--accent);
        box-shadow: 0 2px 20px rgba(79, 140, 255, 0.1);
    }

    .search-icon {
        color: var(--text-muted);
        font-size: 1.25rem;
        margin-right: 1rem;
    }

    .search-input {
        flex: 1;
        border: none;
        background: transparent;
        font-size: 1.1rem;
        color: var(--text);
        outline: none;
    }

    .search-input::placeholder {
        color: var(--text-muted);
    }

    .search-btn {
        background: var(--accent);
        border: none;
        color: white;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-left: 1rem;
        transition: all 0.2s ease;
    }

    .search-btn:hover {
        background: var(--accent-dark, #4a90e2);
        transform: scale(1.05);
    }

    .search-suggestions {
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        background: var(--surface);
        border: 1px solid var(--border);
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        max-height: 300px;
        overflow-y: auto;
        z-index: 1000;
        margin-top: 0.5rem;
        display: none;
    }

    .suggestion-item {
        padding: 0.75rem 1rem;
        border-bottom: 1px solid var(--border);
        cursor: pointer;
        transition: background-color 0.2s ease;
    }

    .suggestion-item:hover {
        background: var(--background);
    }

    .suggestion-item:last-child {
        border-bottom: none;
    }

    .search-content {
        margin-bottom: 2rem;
    }

    .section-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: var(--text);
        margin-bottom: 1.5rem;
    }

    .subsection-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: var(--text);
        margin-bottom: 1rem;
        margin-top: 2rem;
    }

    .suggestion-categories {
        margin-bottom: 2rem;
    }

    .suggestion-card {
        background: var(--surface);
        border: 1px solid var(--border);
        border-radius: 12px;
        padding: 1.5rem;
        text-align: center;
        height: 100%;
        transition: all 0.3s ease;
    }

    .suggestion-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        border-color: var(--accent);
    }

    .suggestion-icon {
        font-size: 2.5rem;
        margin-bottom: 1rem;
    }

    .suggestion-card h5 {
        color: var(--text);
        font-weight: 600;
        margin-bottom: 0.75rem;
    }

    .suggestion-card p {
        color: var(--text-muted);
        margin-bottom: 1.25rem;
    }

    .popular-searches,
    .recent-searches {
        background: var(--surface);
        border-radius: 12px;
        padding: 1.5rem;
        border: 1px solid var(--border);
        margin-bottom: 2rem;
    }

    .search-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.75rem;
    }

    .search-tag {
        display: inline-block;
        padding: 0.5rem 1rem;
        background: var(--background);
        color: var(--text);
        text-decoration: none;
        border-radius: 20px;
        font-size: 0.875rem;
        font-weight: 500;
        border: 1px solid var(--border);
        transition: all 0.2s ease;
    }

    .search-tag:hover {
        background: var(--accent);
        color: white;
        border-color: var(--accent);
        transform: translateY(-2px);
    }

    .search-tips {
        background: var(--surface);
        border-radius: 12px;
        padding: 1.5rem;
        border: 1px solid var(--border);
    }

    .tips-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .tips-list li {
        padding: 0.5rem 0;
        color: var(--text);
        display: flex;
        align-items: center;
    }

    .tips-list li::before {
        content: "💡";
        margin-right: 0.75rem;
    }

    .tips-list code {
        background: var(--background);
        color: var(--accent);
        padding: 0.25rem 0.5rem;
        border-radius: 4px;
        font-size: 0.875rem;
        margin: 0 0.25rem;
    }

    .search-preview {
        background: var(--surface);
        border-radius: 12px;
        padding: 2rem;
        border: 1px solid var(--border);
        text-align: center;
    }

    /* Mobile responsiveness */
    @@media (max-width: 768px) {
        .search-container {
            padding: 1rem;
        }

        .search-input-group {
            padding: 0.6rem 1rem;
        }

        .search-input {
            font-size: 1rem;
        }

        .search-btn {
            width: 36px;
            height: 36px;
            margin-left: 0.5rem;
        }

        .suggestion-card {
            padding: 1rem;
        }

        .popular-searches,
        .recent-searches,
        .search-tips {
            padding: 1rem;
        }

        .search-tags {
            gap: 0.5rem;
        }

        .search-tag {
            font-size: 0.8rem;
            padding: 0.4rem 0.8rem;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('searchInput');
        const searchSuggestions = document.getElementById('searchSuggestions');
        let debounceTimer;

        // Auto-focus search input
        searchInput.focus();

        // Handle search suggestions
        searchInput.addEventListener('input', function() {
            const query = this.value.trim();
            
            clearTimeout(debounceTimer);
            debounceTimer = setTimeout(() => {
                if (query.length >= 2) {
                    fetchSuggestions(query);
                } else {
                    hideSuggestions();
                }
            }, 300);
        });

        // Hide suggestions when clicking outside
        document.addEventListener('click', function(e) {
            if (!searchInput.contains(e.target) && !searchSuggestions.contains(e.target)) {
                hideSuggestions();
            }
        });

        // Handle keyboard navigation
        searchInput.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                hideSuggestions();
            }
        });

        function fetchSuggestions(term) {
            fetch(`/Search/Suggestions?term=${encodeURIComponent(term)}`)
                .then(response => response.json())
                .then(data => {
                    displaySuggestions(data.suggestions || []);
                })
                .catch(error => {
                    console.error('Error fetching suggestions:', error);
                    hideSuggestions();
                });
        }

        function displaySuggestions(suggestions) {
            if (suggestions.length === 0) {
                hideSuggestions();
                return;
            }

            searchSuggestions.innerHTML = suggestions
                .map(suggestion => `
                    <div class="suggestion-item" onclick="selectSuggestion('${suggestion}')">
                        <i class="bi bi-search me-2"></i>
                        ${suggestion}
                    </div>
                `).join('');
                
            searchSuggestions.style.display = 'block';
        }

        function hideSuggestions() {
            searchSuggestions.style.display = 'none';
        }

        window.selectSuggestion = function(suggestion) {
            searchInput.value = suggestion;
            hideSuggestions();
            document.querySelector('.search-form').submit();
        };

        // Load recent searches for logged-in users
        if (@Json.Serialize(User.Identity?.IsAuthenticated == true)) {
            loadRecentSearches();
        }

        function loadRecentSearches() {
            // This would typically load from localStorage or an API
            const recentSearches = JSON.parse(localStorage.getItem('recentSearches') || '[]');
            const recentSearchesContainer = document.getElementById('recentSearches');
            
            if (recentSearches.length > 0) {
                recentSearchesContainer.innerHTML = recentSearches
                    .slice(0, 5)
                    .map(search => `<a href="/Search/Results?query=${encodeURIComponent(search)}" class="search-tag">${search}</a>`)
                    .join('');
            }
        }

        // Save search to recent searches when form is submitted
        document.querySelector('.search-form').addEventListener('submit', function() {
            const query = searchInput.value.trim();
            if (query && @Json.Serialize(User.Identity?.IsAuthenticated == true)) {
                saveRecentSearch(query);
            }
        });

        function saveRecentSearch(query) {
            let recentSearches = JSON.parse(localStorage.getItem('recentSearches') || '[]');
            recentSearches = recentSearches.filter(search => search !== query);
            recentSearches.unshift(query);
            recentSearches = recentSearches.slice(0, 10); // Keep only last 10
            localStorage.setItem('recentSearches', JSON.stringify(recentSearches));
        }
    });
</script>