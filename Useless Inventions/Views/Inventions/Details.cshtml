@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Identity.UI
@model Useless_Inventions.Models.Invention
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = Model.Title;
    var currentUserId = UserManager.GetUserId(User);
    var postModel = new {
        User = "@" + Model.User?.UserName,
        Content = Model.Title + ": " + Model.Description,
        Time = Model.CreatedAt.ToString("MMM dd, yyyy"),
        Likes = Model.Likes?.Count ?? 0,
        Comments = Model.Comments?.Count ?? 0,
        ImageUrl = Model.ImageUrl,
        Id = Model.Id
    };
}

<div class="p-0" style="max-width: 700px; margin: 0 auto;">
    @await Html.PartialAsync("Components/Post/_PostCard", postModel)

    @if (Model.UserId == currentUserId)
    {
        <div class="mb-4 d-flex gap-2">
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">Edit</a>
            <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal">
                Delete
            </button>
        </div>
    }

    <div class="card mb-4">
        <div class="card-body">
            <h5 class="card-title d-flex align-items-center gap-2">
                <i class="bi bi-heart-fill text-danger"></i>
                <span>@Model.Likes.Count Likes</span>
            </h5>
            @if (User.Identity?.IsAuthenticated == true)
            {
                <form asp-action="ToggleLike" asp-route-id="@Model.Id" method="post" class="d-inline">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn @(Model.Likes.Any(l => l.UserId == currentUserId) ? "btn-danger" : "btn-outline-danger")">
                        <i class="bi bi-heart@(Model.Likes.Any(l => l.UserId == currentUserId) ? "-fill" : "")"></i>
                        @(Model.Likes.Any(l => l.UserId == currentUserId) ? "Unlike" : "Like")
                    </button>
                </form>
            }
        </div>
    </div>

    <h3 class="mt-4 mb-3">Comments</h3>
    @await Html.PartialAsync("Components/Comment/_CommentComposer", Model.Id)
    @await Html.PartialAsync("Components/Comment/_CommentList", (Model.Comments.AsEnumerable(), currentUserId, Model.Id))
</div>

@if (Model.UserId == currentUserId)
{
    <div class="modal fade" id="deleteModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Delete Invention</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this invention? This cannot be undone.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <form asp-action="Delete" asp-route-id="@Model.Id" method="post">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}